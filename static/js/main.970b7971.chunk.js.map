{"version":3,"sources":["shared/util/utility.js","shared/Data/2021_week19_climate_data.csv","shared/uiElements/DataSelectors.js","shared/uiElements/Backdrop.js","shared/uiElements/Modal.js","shared/uiElements/DateSelector.js","Chart/StackedBarChart.js","shared/Data/SelectorData.js","PDF_Generator/Components/logo.png","PDF_Generator/Components/ReportHeader.js","PDF_Generator/Components/ReportBody.js","PDF_Generator/Generate_PDF.js","shared/uiElements/LoadingSpinner.js","App.js","shared/Data/useData.js","reportWebVitals.js","index.js"],"names":["currentTimeStamp","Date","getTime","VPD_Calculator","temp","humidity","result","Math","E","SVP","round","normalize_data","x","mini","maxi","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","elementPadding","padding","DataSelect","currentSensor","setcurrentSensor","dataSetSelecots","classes","display","setDisplay","className","FormControl","variant","InputLabel","id","Select","labelId","value","onChange","event","target","label","map","d","MenuItem","key","Backdrop","props","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","style","headerClass","header","onSubmit","preventDefault","contentClass","children","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","root","flexDirection","alignItems","buttonHover","cursor","backgroundColor","selectionRange","startDate","endDate","DateSelectorButtonGroup","dateSelector","setCurrentDate","currentDate","React","useState","RangeDisplay","setRangeDisplay","days","undefined","range","setRange","handleChange","tempDate","find","innerText","toLowerCase","endData","toDateString","Button","ranges","selection","ButtonGroup","color","innerHeight","innerWidth","StackedBarChart","data","date","sensors","colorsArr","colors","forEach","senson","i","svgRef","useRef","outputData","useEffect","svg","select","current","JSON","parse","stringify","currentObjectDate","givenDate","getMonth","moment","isBetween","sDate","daysOffSet","dateIsBetween","dRow","length","temperature","avg_temp","min","max","co2","avg_co2","humitidy","avg_humitidy","vpd","avg_vpd","push","sensor","console","log","layers","stack","keys","order","stackOrderAscending","stackGenerator","extent","layer","sequence","xScale","scaleBand","domain","yScale","scaleLinear","selectAll","join","attr","bandwidth","on","tooltip","xPosition","pointer","node","yPosition","text","append","height","xAxis","axisBottom","scale","tickFormat","timeFormat","tickValues","filter","call","yAxis","axisLeft","legend","enter","ref","width","transform","position","logoStyle","maxWidth","ReportHeader","scimeticLogo","Typography","component","src","logo","alt","AppBar","Toolbar","ReportBody","GeneratePDF","input","domtoimage","toPng","then","dataUrl","pdf","jsPDF","addImage","save","catch","error","LoadingSpinner","asOverlay","App","setData","a","row","Temperature_2","Temperature_137522","Humitidy_137522","Humitidy_2","CarbonDioxide_137522","CarbonDioxide_2","Vpd_2","Vpd_137522","csv","csvData","outputCSV","fetchData","useData","Grid","container","item","md","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.970b7971.chunk.js","sourcesContent":["import moment from 'moment';\r\n\r\nconst currentTimeStamp= new Date().getTime();\r\nconst daysOffSet = 1;\r\nconst dayMilliseconds = daysOffSet*24*60*60*1000;\r\n\r\nexport const dateIsBetween= (currentObjectDate, givenDate)=>{\r\n    const {startDate, endDate}= givenDate\r\n\r\n    if(typeof startDate.getMonth === 'function' ){\r\n        return moment(currentObjectDate).isBetween(startDate, endDate)\r\n    }else{\r\n        const sDate =  new Date(currentTimeStamp - (startDate * dayMilliseconds))\r\n        return moment(currentObjectDate).isBetween(sDate, endDate)\r\n    }\r\n    \r\n   \r\n}\r\n\r\nconst SVP=(temp)=>{\r\n    //SVP = 610.78 x e^(T / (T +238.3) x 17.2694))\r\n    return 610.78 * Math.E**( temp / (temp +238.3) * 17.2694)\r\n}\r\n\r\nexport const VPD_Calculator=(temp, humidity)=>{\r\n    // SVP x (1 – RH/100) = VPD\r\n       const result = SVP(temp) *(1 - (humidity)/100) /1000\r\n       return Math.round(result * 100) /100\r\n\r\n}\r\n\r\nexport const normalize_data=(x, mini, maxi)=>{\r\n    //zi = (xi – min(x)) / (max(x) – min(x)) * 100\r\n\r\n    return (x - mini) / ((maxi - mini) )\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/2021_week19_climate_data.513ad7be.csv\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(6),\r\n    },\r\n    elementPadding: {\r\n        padding: theme.spacing(6),\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function DataSelect({ currentSensor, setcurrentSensor, dataSetSelecots, display, setDisplay }) {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event) => {\r\n\r\n        setcurrentSensor(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.selectEmpty}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Sensors</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={currentSensor}\r\n                    onChange={handleChange}\r\n                    label=\"Sensor\"\r\n                >\r\n                    {\r\n                        dataSetSelecots.map(d => (\r\n                            <MenuItem value={d.value} key={d.key}>{d.key}</MenuItem>\r\n                        ))\r\n                    }\r\n\r\n                </Select>\r\n\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './DatePicker_Model.css';\r\nimport Modal from './Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    buttonHover: {\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n            backgroundColor: \"#86af49\"\r\n        },\r\n        \"&:active\":{\r\n            backgroundColor: \"#86af49\"\r\n        }\r\n    }\r\n}));\r\nconst selectionRange = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: 'selection',\r\n}\r\n\r\n\r\nexport function DateSelectorButtonGroup({ dateSelector, currentDate, setCurrentDate, display }) {\r\n    const classes = useStyles();\r\n    const [RangeDisplay, setRangeDisplay] = React.useState(false);\r\n    const [range, setRange] = React.useState({ startDate: dateSelector[0].days, endDate: undefined });\r\n    const handleSelect = (ranges) => {\r\n        setCurrentDate(ranges.selection)\r\n        setRange(ranges.selection)\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setRangeDisplay(false)\r\n    }\r\n    const handleChange = (event) => {\r\n\r\n        const tempDate = dateSelector.find(d => (d.key === (event.target.innerText).toLowerCase()))\r\n        if (tempDate.days === 0) {\r\n            setRangeDisplay(true)\r\n        } else {\r\n            let result = { startDate: tempDate.days, endData: undefined };\r\n            setCurrentDate(result);\r\n        }\r\n    };\r\n    if (RangeDisplay) {\r\n        return (\r\n            <Modal\r\n                show={RangeDisplay}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                header={`Current date: ${new Date(range.startDate).toDateString()} - ${new Date(range.endDate).toDateString()}`}\r\n                footer={<Button onClick={handleClose}>CLOSE</Button>}\r\n            >\r\n                <DateRangePicker\r\n                    ranges={[selectionRange]}\r\n                    onChange={handleSelect}\r\n                />\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n    if (!display) {\r\n        return (\r\n            <div className={classes.root}>\r\n\r\n                <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                    {dateSelector.map(d => (\r\n                        <Button className={classes.buttonHover}  onClick={handleChange} key={d.key}>{d.key}</Button>\r\n                    ))}\r\n\r\n                </ButtonGroup>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n    return <React.Fragment></React.Fragment>\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport { dateIsBetween, normalize_data } from '../shared/util/utility'\r\n\r\nimport {\r\n  select,\r\n  scaleBand,\r\n  axisBottom,\r\n  stack,\r\n  max,\r\n  scaleLinear,\r\n  axisLeft,\r\n  stackOrderAscending,\r\n  timeFormat,\r\n  pointer,\r\n  min,\r\n} from \"d3\";\r\n\r\n\r\n/**\r\n * Component that renders a StackedBarChart\r\n */\r\n\r\nconst height = 600;\r\nconst width = 760;\r\nconst margin = {\r\n  top: 100,\r\n  right: 10,\r\n  left: 50,\r\n  bottom: 20,\r\n};\r\nconst innerHeight = height - margin.top - margin.bottom;\r\nconst innerWidth = width - margin.left - margin.right;\r\n\r\nfunction StackedBarChart({ data, date, sensors }) {\r\n\r\n  const colorsArr = ['#d53e4f', \"#3288bd\", \"#66c2a5\", \"#f46d43\"]\r\n  const colors = {};\r\n  sensors.forEach((senson, i) => {\r\n\r\n    colors[senson] = colorsArr[i]\r\n  });\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const outputData = []\r\n\r\n\r\n\r\n  // will be called initially and on every data change\r\n  useEffect(() => {\r\n\r\n    const svg = select(svgRef.current);\r\n\r\n\r\n\r\n    //Reshaping data accoring to need\r\n    const dataCopy = JSON.parse(JSON.stringify(data));\r\n    dataCopy.forEach(d => {\r\n\r\n      if (dateIsBetween(d.Date, date)) {\r\n        let dRow = {}\r\n        if (sensors.length === 4) {\r\n          dRow[\"Date\"] = d.Date;\r\n          dRow.temperature = normalize_data(d.avg_temp, min(data, (x) => x.avg_temp), max(data, (x) => x.avg_temp))\r\n          dRow.co2 = normalize_data(d.avg_co2, min(data, (x) => x.avg_co2), max(data, (x) => x.avg_co2))\r\n          dRow.humitidy = normalize_data(d.avg_humitidy, min(data, (x) => x.avg_humitidy), max(data, (x) => x.avg_humitidy))\r\n          dRow.vpd = normalize_data(d.avg_vpd, min(data, (x) => x.avg_vpd), max(data, (x) => x.avg_vpd))\r\n\r\n          outputData.push(dRow);\r\n        }\r\n        else {\r\n          sensors.forEach(sensor => {\r\n            dRow[\"Date\"] = d.Date;\r\n            if (sensor in d) {\r\n              dRow[sensor] = d[sensor]\r\n            }\r\n          })\r\n          outputData.push(dRow);\r\n        }\r\n      }\r\n\r\n\r\n    })\r\n\r\n    console.log(\"outputData: \", outputData)\r\n\r\n    // stacks / layers\r\n    const stackGenerator = stack()\r\n      .keys(sensors)\r\n      .order(stackOrderAscending);\r\n    const layers = stackGenerator(outputData);\r\n\r\n    const extent = [\r\n      0,\r\n      max(layers, layer => max(layer, sequence => sequence[1]))\r\n    ];\r\n\r\n\r\n\r\n    // scales\r\n    const xScale = scaleBand()\r\n      .domain(outputData.map(d => {\r\n        return new Date(d.Date).getTime()\r\n      }))\r\n      .range([0, innerWidth])\r\n      .padding(0.2);\r\n\r\n    const yScale = scaleLinear()\r\n      .domain(extent)\r\n      .range([innerHeight, 0]);\r\n\r\n\r\n    // rendering\r\n    svg\r\n      .selectAll(\".layer\")\r\n      .data(layers)\r\n      .join(\"g\")\r\n      .attr(\"class\", \"layer\")\r\n      .attr(\"fill\", layer => colors[layer.key])\r\n      .selectAll(\"rect\")\r\n      .data(layer => layer)\r\n      .join(\"rect\")\r\n      .attr(\"x\", sequence => xScale(new Date(sequence.data.Date).getTime()))\r\n      .attr(\"width\", xScale.bandwidth())\r\n      .attr(\"y\", sequence => yScale(sequence[1]))\r\n      .attr(\"height\", sequence => yScale(sequence[0]) - yScale(sequence[1]))\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`)\r\n      .on(\"mouseover\", function () { tooltip.style(\"display\", null); })\r\n      .on(\"mouseout\", function () { tooltip.style(\"display\", \"none\"); })\r\n      .on(\"mousemove\", function (d) {\r\n        var xPosition = pointer(d, svg.node)[0];\r\n        var yPosition = pointer(d, svg.node)[1];\r\n        tooltip.attr(\"transform\", `translate( ${xPosition-200 }, ${yPosition-100})`);\r\n        tooltip.select(\"text\").text(layer => layer);\r\n      });\r\n    var tooltip = svg.append(\"g\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"display\", \"none\");\r\n\r\n    tooltip.append(\"text\")\r\n      .attr(\"dy\", \"1.2em\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"font-size\", \"15px\")\r\n      .attr(\"font-weight\", \"bold\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"x label\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"x\", innerWidth / 2)\r\n      .attr(\"y\", height + 20)\r\n      .text(\"Date Month\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"class\", \"y label\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"y\", (innerWidth / 2)-350)\r\n      .attr(\"x\", (-innerHeight / 2) + 50)\r\n      .attr(\"dy\", \".75em\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .text(\"Sensor Data\");\r\n\r\n    // axes\r\n    const xAxis = axisBottom(xScale).scale(xScale)\r\n      .tickFormat(timeFormat(\"%d %b\"))\r\n      .tickValues(xScale.domain().filter(function (d, i) {\r\n        return !(i % 400)\r\n      }));\r\n\r\n    svg\r\n      .select(\".x-axis\")\r\n      .attr(\"transform\", `translate(0, ${innerHeight})`)\r\n      .call(xAxis);\r\n\r\n    const yAxis = axisLeft(yScale);\r\n    svg.select(\".y-axis\").call(yAxis);\r\n\r\n    var legend = svg.append('g')\r\n    .attr('class', 'legend')\r\n    .attr('transform', 'translate(' + (innerWidth-90) + ', 20)');\r\n  legend.selectAll('text')\r\n    .data(sensors)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (d) {\r\n      return d;\r\n    })\r\n    .attr('x', 18)\r\n    .attr('y', function (d, i) {\r\n      return i * 18;\r\n    })\r\n    .attr('text-anchor', 'start')\r\n    .attr('alignment-baseline', 'hanging');\r\n  legend.selectAll('rect')\r\n    .data(sensors)\r\n    .enter()\r\n    .append('rect')\r\n    .attr('x', 0)\r\n    .attr('y', function (d, i) {\r\n      return i * 18;\r\n    })\r\n    .attr('width', 12)\r\n    .attr('height', 12)\r\n    .attr('fill', function (d, i) {\r\n      return colors[d];\r\n    });\r\n\r\n\r\n  }, [outputData, data, date, sensors, colors]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <svg ref={svgRef} width={width} height={height}>\r\n        <g\r\n          transform={`translate(${margin.left},${margin.top})`}\r\n        >\r\n          <g className=\"x-axis\"></g> \r\n          <g className=\"y-axis\" />\r\n        </g>\r\n\r\n      </svg>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default StackedBarChart;","export const dataSetSelecots = [\r\n    { key: \"Temperature\", value: [\"Temperature_2\", \"Temperature_137522\"] },\r\n    { key: \"Co2 Levels\", value: [\"CarbonDioxide_2\", \"CarbonDioxide_137522\"] },\r\n    { key: \"Humidity\", value: [\"Humitidy_2\", \"Humitidy_137522\"] },\r\n    { key: \"VPD\", value: [\"Vpd_2\", \"Vpd_137522\"] },\r\n    { key: \"All\", value: [\"temperature\", \"co2\", \"humitidy\", \"vpd\"] }\r\n]\r\nexport const dateSelector = [\r\n    { key: \"12 hours\", days: 0.5 },\r\n    { key: \"1 day\", days: 1 },\r\n    { key: \"7 days\", days: 7 },\r\n    { key: \"14 days\", days: 14 },\r\n    { key: \"30 days\", days: 30 },\r\n    { key: \"custome date\", days: 0 },\r\n]","export default __webpack_public_path__ + \"static/media/logo.872fc8ea.png\";","// import React from \"react\";\r\n\r\n// export const ReportHeader = ({display})=>{\r\n\r\n\r\n//     if (display) {\r\n//         return <div>displaying</div>;\r\n//       }\r\n//       return <React.Fragment></React.Fragment>\r\n\r\n// }\r\n\r\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport logo from \"./logo.png\"\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    position:\"inherit\"\r\n\r\n  },\r\n  logoStyle:{\r\n    maxWidth:\"170px\"\r\n  }\r\n}))\r\n\r\nexport default function ReportHeader({ display }) {\r\n  const { header, logoStyle } = useStyles();\r\n  const displayDesktop = () => {\r\n    return <Toolbar>{scimeticLogo}</Toolbar>;\r\n  };\r\n  const scimeticLogo = (\r\n    <Typography variant=\"h6\" component=\"h1\">\r\n      <img src={logo} alt=\"logo\" className={logoStyle} />\r\n    </Typography>\r\n  );\r\n\r\n\r\n  if (display) {\r\n    return (\r\n      <header >\r\n        <AppBar className={header}>{displayDesktop()}</AppBar>\r\n      </header>\r\n    );\r\n  }\r\n  return <React.Fragment></React.Fragment>\r\n\r\n\r\n}\r\n","import React from \"react\";\r\nimport \"./ReportBody.css\"\r\nexport const ReportBody = (props) => {\r\n\r\n\r\n    if (props.display) {\r\n        return <React.Fragment>\r\n            <div className=\"report-body\">\r\n                <div className='report-details'>\r\n                    <span >\r\n                        Report created by: <span className=\"report-creater\"> Talha </span>\r\n                    </span>\r\n                    <span>\r\n                        Report Date: Date\r\n                    </span>\r\n                </div>\r\n                <div className=\"main-text\">\r\n                    <span className=\"company-name\">Scimetic | Epic Solutions</span>\r\n                    <span className=\"greenhouse-name\">Test Greenhouse</span>\r\n                    <span>\r\n                        Genealogy: test Genealogy\r\n                    </span>\r\n                    <span>\r\n                        Date of Plating: {new Date().toDateString()}\r\n                    </span>\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <span className=\"d3-chart\">\r\n                    {props.children}\r\n                </span>\r\n                <p>More text can be added</p>\r\n            </div>\r\n        </React.Fragment>\r\n    }\r\n    return <React.Fragment> {props.children}</React.Fragment>\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport domtoimage from 'dom-to-image';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const GeneratePDF = (props) => {\r\n    const printDocument = () => {\r\n        const input = document.getElementById('divToPrint');\r\n\r\n        domtoimage.toPng(input)\r\n            .then(function (dataUrl) {\r\n                const pdf = new jsPDF();\r\n                pdf.addImage(dataUrl, 'PNG', 0, 0);\r\n                pdf.save(\"download.pdf\");\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.error('oops, something went wrong!', error);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    if (props.display) {\r\n        return <React.Fragment>\r\n\r\n            <Button variant=\"outlined\" color=\"primary\" aria-label=\"text primary button\" onClick={printDocument}>Print</Button>\r\n\r\n        </React.Fragment>;\r\n    }\r\n    return <React.Fragment></React.Fragment>\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","\nimport React from 'react';\n\nimport { useData } from './shared/Data/useData';\nimport DataSelect from \"./shared/uiElements/DataSelectors\"\nimport { DateSelectorButtonGroup } from \"./shared/uiElements/DateSelector\"\nimport StackedBarChart from \"./Chart/StackedBarChart\"\nimport { dataSetSelecots, dateSelector } from \"./shared/Data/SelectorData\"\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ReportHeader from \"./PDF_Generator/Components/ReportHeader\"\nimport { ReportBody } from \"./PDF_Generator/Components/ReportBody\"\nimport { GeneratePDF } from \"./PDF_Generator/Generate_PDF\"\nimport LoadingSpinner from \"./shared/uiElements/LoadingSpinner\"\nimport \"./App.css\"\n\n\n\n\nconst App = () => {\n  const data = useData();\n  const [currentSensor, setcurrentSensor] = React.useState(dataSetSelecots[0].value);\n  const [currentDate, setCurrentDate] = React.useState({ startDate: dateSelector[3].days, endDate: undefined });\n  const [display, setDisplay] = React.useState(false)\n\n  const clickHandler = () => {\n\n    setDisplay(!display);\n\n  };\n\n  \n  if (!data) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n\n  return (\n    <React.Fragment >\n\n      <Grid container  >\n        <Grid item md={1} style={{  marginLeft:\"10%\"}} ></Grid>\n        <div >\n          <Grid item md={9} style={{  maxWidth:\"100%\" }} id=\"divToPrint\" >\n            <ReportHeader display={display} />\n            <DateSelectorButtonGroup currentDate={currentDate} setCurrentDate={setCurrentDate} dateSelector={dateSelector} display={display} />\n            <ReportBody display={display}>\n\n              <StackedBarChart data={data} date={currentDate} sensors={currentSensor} />\n              <h3> Graph Name & description  </h3>\n              \n            </ReportBody>\n          </Grid>\n        </div>\n        <Grid item md={2} style={{  marginLeft:\"4%\"}}>\n          <DataSelect currentSensor={currentSensor} dataSetSelecots={dataSetSelecots} setcurrentSensor={setcurrentSensor} display={display} setDisplay={setDisplay} />\n          <Button variant=\"outlined\" color=\"primary\" onClick={clickHandler}>\n            {!display ? \"View PDF Report\" : \"Back\"}\n          </Button>\n          <GeneratePDF display={display} />\n\n        </Grid>\n\n      </Grid>\n\n\n\n\n\n    </React.Fragment>\n  );\n\n  // else {\n  //   return (<PDFViewer>\n  //         <DataSelect currentSensor={currentSensor} dataSetSelecots={dataSetSelecots} setcurrentSensor={setcurrentSensor} display={display} setDisplay={setDisplay} />\n\n  //     <MyDocument />\n  //   </PDFViewer>)\n  // }\n}\n\n\nexport default App;\n\n","import { useState, useEffect } from 'react';\r\nimport { csv } from 'd3';\r\nimport {VPD_Calculator} from \"../util/utility\"\r\n\r\nimport csvData from './2021_week19_climate_data.csv';\r\n\r\n\r\n\r\nexport const useData = () => {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n\r\n\r\n    // const columns = [\"Temperature_137522\",\"Temperature_2\",\"Humitidy_137522\",\"Humitidy_2\",\"CarbonDioxide_137522\",\"CarbonDioxide_2\"]\r\n    \r\n    async function fetchData() {\r\n      const row = (d) => {\r\n        d.Date = new Date(d.Date);\r\n        d.Temperature_2 = +[d.Temperature_2]\r\n        d.Temperature_137522 =+[d.Temperature_137522]\r\n        d.Humitidy_137522 = +[d.Humitidy_137522]\r\n        d.Humitidy_2 = +[d.Humitidy_2]\r\n        d.CarbonDioxide_137522 = +[d.CarbonDioxide_137522]\r\n        d.CarbonDioxide_2 = +[d.CarbonDioxide_2]\r\n\r\n        d.Vpd_2 = VPD_Calculator(d.Temperature_2, d.Humitidy_2)\r\n        d.Vpd_137522 = VPD_Calculator(d.Temperature_137522,d.Humitidy_137522)\r\n        d.avg_temp = (d.Temperature_137522 + d.Temperature_2)/2\r\n        d.avg_co2 = (d.CarbonDioxide_137522 + d.CarbonDioxide_2)/2\r\n        d.avg_humitidy = (d.Humitidy_137522 + d.Humitidy_2)/2\r\n        d.avg_vpd = (d.Vpd_137522 + d.Vpd_2)/2\r\n\r\n\r\n        return d;\r\n      };\r\n\r\n      \r\n      const outputCSV = await csv(csvData, row)\r\n\r\n\r\n      \r\n      setData(outputCSV);\r\n\r\n\r\n    }\r\n    fetchData()\r\n\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}